name: Winston Bot 中文檢查
author: Elvis Mao
description: 拼寫錯誤、專有名詞大小寫、中國政治色彩用語檢查工具
branding:
  color: gray-dark
  icon: file-text

inputs:
  exts:
    description: "File extensions to check (comma separated)"
    default: "md"
    required: false
  github_token:
    description: "GitHub Token for pushing commits"
    required: false

runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "22"

    - name: Install autocorrect
      shell: bash
      run: npm install autocorrect-node

    - name: Run autocorrect
      run: npx autocorrect --fix
      shell: bash
      continue-on-error: true

    - name: Commit autocorrected files
      shell: bash
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "actions@github.com"
        git add .
        git reset package.json package-lock.json package-lock.yaml yarn.lock .github

        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "style: 你們為甚麼就不能加個空白呢？"
          git pull --rebase
          git push
        fi
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      continue-on-error: true

    - name: Install jq & parallel
      run: |
        sudo apt-get update -y
        sudo apt-get install -y jq parallel
      shell: bash

    - name: Check files with Winston API
      shell: bash
      working-directory: ${{ github.workspace }}
      run: |
        set -e
        API_URL="https://winston.emtech.cc/api/check"
        mkdir -p logs
        echo "🔍 Searching ${{ inputs.exts }} files..."
        IFS=',' read -r -a EXT_ARR <<< "${{ inputs.exts }}"
        EXT_REGEX=$(IFS='|'; echo "${EXT_ARR[*]}")
        mapfile -t FILES < <(
          git ls-files | grep -E "\.(${EXT_REGEX})$"
        )
        echo "Found ${#FILES[@]} files"
        if [ ${#FILES[@]} -eq 0 ]; then
          echo "⚠️ No ${{ inputs.exts }} files found"
          exit 0
        fi

        echo "🚀 Running checks in parallel for ${#FILES[@]} files..."
        error_flag=0
        check_file() {
          local file="$1"
          local text
          text=$(jq -Rs . < "$file")
          local response
          response=$(curl -s -X POST "$API_URL" \
            -H "Content-Type: application/json" \
            -d "{\"text\": $text}")

          if echo "$response" | jq -e '.mistakes | length > 0' >/dev/null; then
            echo "❌ [$file]"
            echo "$response" | jq -r '.mistakes[] |
              if .type == "spelling_correction" or .type == "case" or .type == "political_terminology" or .type == "regional_difference" then
                "「\(.wrong)」→「\(.correct | join("、"))」 ❌"
              elif .type == "term_ambiguity_check" then
                "⚠️ 你確定你想說的是「\(.wrong)」而不是「\(.correct | join("、"))」嗎？"
              else
                "⚠️ 其他類型：\(.type) - \(.wrong) → \(.correct | join("、"))"
              end' | tee -a logs/winston.log
            # 檢查是否有嚴重錯誤類型
            if echo "$response" | jq -e '.mistakes[] | select(.type != "term_ambiguity_check")' >/dev/null; then
              echo "❗ Error found in $file"
              echo "$file" >> logs/error_files.txt
            fi
          else
            echo "✅ [$file] OK"
          fi
        }
        export -f check_file
        export API_URL

        parallel -j 10 check_file ::: "${FILES[@]}"

        if [ -s logs/error_files.txt ]; then
          echo "🚫 Winston Bot 檢查未通過：以下文件存在錯誤"
          cat logs/error_files.txt
          exit 1
        else
          echo "✅ Winston Bot 檢查完成：僅有 warning 或全數通過"
        fi
